/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

 buildscript {
	 ext {
		 springBootVersion = '2.1.5.RELEASE'
	 }
	 repositories {
		 mavenCentral()
	 }
	 dependencies {
		 classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	 }
 }
 
 
/*plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'eclipse-wtp'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'jar'
}*/

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.kmutt.sit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	compile("org.springframework.boot:spring-boot-starter-batch")
	compile("org.hsqldb:hsqldb")
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	
    // Use JUnit test framework
    // testImplementation 'junit:junit:4.12'
}
